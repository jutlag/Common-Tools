Function New-SecurePassword {
 <#
    .SYNOPSIS
  
      New-SecurePassword generates a new password based on the RNG Crypto Service provider
  
    .DESCRIPTION
  
      New-SecurePassword generates a new password based on the RNG Crypto Service provider. It is considered more secure than
      a password generated by the traditional random script generators. It will use a default charactorset accepted by most 
      services and applications however at times you might need to specify a set of charactors to use. The function accepts
      a set of charactors but a minumum number of 8 digit password is created and atleast 27 unique letters and numbers must
      be used as a charactor set to be used for genetration of password. default passoerd length is 20
  
      .Notes
      Author: Gurpreet Singh Jutla 
  
    .EXAMPLE
  
    C:\PS> New-SecurePassword
#>
 [CmdletBinding()]
 param (
  [Parameter(Mandatory = $False)][ValidateScript( { ( -join ( $_.ToCharArray() | Get-unique )).Length -ge 27 })]
  [string] $CharacterSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_!@#$%^&*()_",
  [Parameter(Mandatory = $False)][ValidateScript( { $_ -ge 8 })]
  [int] $PasswordLength = 20
 )
 Process {
  $bytes = New-Object "System.Byte[]" $PasswordLength
  $randomisor = New-Object System.Security.Cryptography.RNGCryptoServiceProvider
  $randomisor.GetBytes($bytes)
  $password = ""

  for ( $counter = 0; $counter -lt $PasswordLength; $counter++ ) {
   $password += $CharacterSet[ $bytes[$counter] % $CharacterSet.Length ]	
  }
    
  return $password
 }
}